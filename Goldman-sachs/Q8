// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
	public:
	unordered_map<int,int>m;
    int rec(int i, int n, string s){
     int ans=0;
     //n-i= size of current string
     
     if(m.find(n-i)!=m.end()) return m[n-i];
     
     if(i>=n) return 1;
     if((s[i]-'0')==0) return 0;
     ans+=((rec(i+1,n,s))%(1000000007));
     if(stoi(s.substr(i,2))>=10 && stoi(s.substr(i,2))<=26 && (i+2)<=n){
         ans+=(rec(i+2,n,s))%(1000000007);
     }
     return m[n-i]=ans%(1000000007);
 }
		int CountWays(string str){
		    // Code here
		   return (rec(0,str.length(),str)%(1000000007));
		}

};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string str;
		cin >> str;
		Solution obj;
		int ans = obj.CountWays(str);
		cout << ans << "\n";
	}
	return 0;
}  // } Driver Code Ends
